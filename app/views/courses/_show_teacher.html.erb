<div class="row flex--freeze">
  <div class="col-12">
    <header class="dashboard__header">
      <h1>
        <%= course.title %>
        <%= link_to edit_course_path(course), class: "btn--icon btn--settings" do %>
          수업 수정하기
        <% end %>
      </h1>
    </header>
  </div>

  <div class="col-12 mt-24">
    <%= render partial: "course_detail", locals: { course: course, enrolled_students: @enrolled_students } %>
  </div>
</div>

<div class="row"
  style="flex-grow: 1">

  <div class="col-lg-9 height--max"
    id="enrolled-students">

    <section class="dashboard-section height--max">
      <header class="dashboard-section__header">
        <h1>
          수강생 대시보드
          <span>
            <%= @enrolled_students.count %>
          </span>
        </h1>
      </header>

      <div class="dashboard__content height--max pb-32"
        style="flex-grow: 1">
        <% if @enrolled_students.empty? %>
          <p class="ui--secondary pt-40 text-center">
            수강생이 없습니다.
          </p>
        <% else %>

          <ul class="user__list">
            <% @enrolled_students.each do |stu| %>
              <%= render partial: "student", locals: { stu: stu, course: course, status: @course_status } %>
            <% end %>

          </ul>
        <% end %>
      </div>
    </section>

  </div>

  <div class="col-lg-3 height--max">
    <% case @course_status %>
      <% when "ongoing" %>
        <%= render partial: "enroll_students", locals: { s: students, e: @enrolled_students, c: course } %>
      <% else %>
        <%= render partial: "certified_students", locals: { s: certified(course, @enrolled_students) } %>
    <% end %>
    
    
  </div>

</div>


<script>
  (function() {
    var userItems = document.querySelectorAll("#enrolled-students .user__header");
    var parentItems = {};
    var activeUserItem = null;

    Array.prototype.slice.call(userItems);

    userItems.forEach(function(item, index) {
      item.addEventListener("click", function() {
        toggleListItem(this, index, "active")
      });
    })

    function generateId (index) {
      return "id" + index;
    }

    function toggleListItem (elm, index, classname) {
      var id = generateId(index)
      var parentNode;
      var parentNodeClassList;

      if (parentItems[id]) {
        parentNode = parentItems[id]
      } else {
        parentNode = elm.parentNode;
        parentItems[id] = parentNode;
      }

      parentNodeClassList = parentNode.classList;

      parentNodeClassList.toggle(classname);

      if (activeUserItem == null) activeUserItem = index;
      else if (activeUserItem === index) activeUserItem = null;
      else {
        parentItems[generateId(activeUserItem)].classList.toggle(classname);
        activeUserItem = index;
      }

    }


  })()
</script>
